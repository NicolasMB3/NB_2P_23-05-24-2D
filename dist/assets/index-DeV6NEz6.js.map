{"version":3,"file":"index-DeV6NEz6.js","sources":["../../src/Application/Controller.js","../../src/Application/System/Navigation.js","../../src/contents/parameters/key_symbols.js","../../src/contents/parameters/options/params1.js","../../src/contents/parameters/options/params2.js","../../src/contents/parameters/options/params4.js","../../src/contents/parameters/controller.js","../../src/Application/System/Windows.js","../../src/contents/parameters/options/params.js","../../src/Application/System/Notifications.js","../../src/Application/Games/Snake.js","../../src/Application/Games/Doom.js","../../src/Application/Hierarchy.js","../../src/Application/Games/Pacman.js","../../src/Application/System/Desktop.js","../../src/contents/paths/contents.js","../../src/Application/System/Dock.js","../../src/Application/Application.js","../../src/index.js"],"sourcesContent":["export class WindowController {\n\n    constructor(classWindows, windowElement, icon) {\n        // en PX\n        this.MIN_WIDTH = 500;\n        this.MIN_HEIGHT = 300;\n\n        this.isFullScreen = false;\n        this.shiftX = null;\n        this.zIndex = 0;\n        this.shiftY = null;\n        this.activeWindow = null;\n        this.isResizingWidth = false;\n        this.isResizingHeight = false;\n        this.animationFrameId = null;\n        this.lastEvent = null;\n        this.originalSize = { width: '', height: '', top: '', left: '' };\n        this.icon = icon;\n\n        this.classWindows = classWindows;\n        this.windowElement = windowElement;\n    }\n\n    init(windowElement) {\n        const controller = windowElement.querySelector('.controller');\n        this.addMinimizeButtonListener(windowElement);\n        this.addExpandButtonListener(windowElement);\n        this.addCloseButtonListener(windowElement);\n        this.addControllerListeners(controller, windowElement);\n        this.addWindowElementListeners(controller, windowElement);\n        document.addEventListener('mouseup', () => this.onMouseUp());\n    }\n\n    addMinimizeButtonListener(windowElement) {\n        const minimizeButton = windowElement.querySelector('.minus');\n        minimizeButton.addEventListener('dblclick', (e) => e.preventDefault());\n        minimizeButton.addEventListener('click', () => this.minimizeWindow(windowElement, this.icon));\n    }\n\n    addExpandButtonListener(windowElement) {\n        const expandButton = windowElement.querySelector('.expand');\n        expandButton.addEventListener('dblclick', (e) => e.preventDefault());\n        expandButton.addEventListener('click', () => this.setFullScreen(windowElement));\n    }\n\n    addCloseButtonListener(windowElement) {\n        const closeButton = windowElement.querySelector('.close');\n        closeButton.addEventListener('dblclick', (e) => e.preventDefault());\n        closeButton.addEventListener('click', () => this.closeWindow(windowElement));\n    }\n\n    addControllerListeners(controller, windowElement) {\n        controller.addEventListener('mousedown', (e) => this.onMouseDown(controller, windowElement, e));\n        controller.addEventListener('mouseup', () => this.onMouseUp());\n        controller.addEventListener('dblclick', () => this.setFullScreen(windowElement));\n        controller.addEventListener('mouseleave', () => this.onMouseLeave());\n    }\n\n    addWindowElementListeners(controller, windowElement) {\n        windowElement.addEventListener('mousemove', (e) => this.onMouseMoveCursor(e, windowElement));\n        windowElement.addEventListener('mousedown', (e) => this.onWindowMouseDown(e, controller, windowElement));\n    }\n\n    bringToFront(windowElement) {\n        windowElement.style.zIndex = (++this.zIndex).toString();\n    }\n\n    closeWindow() {\n        const snakeCanvasElement = this.windowElement.querySelector('canvas.snake');\n\n        if (snakeCanvasElement) {\n            const snakeCanvasId = this.windowElement.querySelector('canvas.snake').id;\n            const snakeCanvas = document.getElementById(snakeCanvasId);\n\n            if (snakeCanvas && snakeCanvas.snakeGame) {\n                snakeCanvas.snakeGame.stopGame();\n            }\n        }\n\n        this.windowElement.remove();\n    }\n\n    minimizeWindow(windowElement, icon) {\n        windowElement.classList.add('minimized');\n\n        setTimeout(() => {\n            windowElement.style.display = 'none';\n        }, 500);\n\n        const dock = document.querySelector('.dock_content');\n        let iconID = dock.querySelector(`.active_dock[data-icon=\"${icon}\"]`);\n\n        if (!iconID) {\n            iconID = document.createElement('div');\n            iconID.classList.add('active_dock');\n            iconID.dataset.icon = icon;\n            iconID.innerHTML = `<img class=\"window_dock_folder items_dock\" src=\"${icon}\" alt=\"Image de fenÃªtre\">`;\n\n            dock.appendChild(iconID);\n        }\n\n        const windowIDs = JSON.parse(iconID.dataset.windows || '[]');\n        const oldIcon = iconID.cloneNode(true);\n\n        windowIDs.push(windowElement.id);\n        iconID.dataset.windows = JSON.stringify(windowIDs);\n        iconID.parentNode.replaceChild(oldIcon, iconID);\n        iconID = oldIcon;\n\n        if (windowIDs.length === 1) {\n            iconID.addEventListener('click', () => {\n                this.restoreWindow(windowElement, iconID);\n            });\n        } else {\n            iconID.addEventListener('click', () => {\n                const menu = iconID.querySelector('.window-menu');\n                if (menu) {\n                    menu.remove();\n                } else {\n                    this.showWindowMenu(iconID);\n                }\n            });\n        }\n    }\n\n    showWindowMenu(iconID) {\n        const windowIDs = JSON.parse(iconID.dataset.windows || '[]');\n        const menu = document.createElement('div');\n        menu.className = 'window-menu';\n\n        menu.innerHTML = '';\n        windowIDs.forEach(id => {\n            const menuItem = document.createElement('div');\n            menuItem.textContent = id;\n            menuItem.addEventListener('click', () => {\n                this.restoreWindow(document.getElementById(id), iconID);\n                const menu = iconID.querySelector('.window-menu');\n                if (menu) {\n                    menu.remove();\n                }\n            });\n            menu.appendChild(menuItem);\n        });\n\n        iconID.appendChild(menu);\n    }\n\n    restoreWindow(windowElement, iconID) {\n        windowElement.classList.remove('minimized');\n        windowElement.style.display = 'block';\n\n        const windowIDs = JSON.parse(iconID.dataset.windows || '[]');\n        iconID.dataset.windows = JSON.stringify(windowIDs.filter(id => id !== windowElement.id));\n\n        if (windowIDs.length <= 1) {\n            iconID.remove();\n        } else {\n            const menu = iconID.querySelector('.window-menu');\n            if (menu) {\n                menu.remove();\n            }\n        }\n    }\n\n    #getMouseAndWindowSize(e, windowElement) {\n        const rect = windowElement.getBoundingClientRect();\n        const mouseX = e.clientX - rect.left;\n        const mouseY = e.clientY - rect.top;\n        const windowWidth = rect.width;\n        const windowHeight = rect.height;\n\n        return { mouseX, mouseY, windowWidth, windowHeight };\n    }\n\n    setFullScreen(windowElement) {\n        const navigationHeight = document.querySelector('.navigation').offsetHeight;\n\n        if (!this.isFullScreen) {\n            this.originalSize = {\n                width: windowElement.style.width,\n                height: windowElement.style.height,\n                top: windowElement.style.top,\n                left: windowElement.style.left\n            };\n\n            this.bringToFront(windowElement)\n            windowElement.style.top = navigationHeight + 'px';\n            windowElement.style.left = '0px';\n            windowElement.style.width = window.innerWidth + 'px';\n            windowElement.style.height = windowElement.parentElement.clientHeight + 'px';\n            windowElement.classList.add('fullScreen');\n            this.isFullScreen = true;\n        } else {\n            windowElement.style.width = this.originalSize.width;\n            windowElement.style.height = this.originalSize.height;\n            windowElement.style.top = this.originalSize.top;\n            windowElement.style.left = this.originalSize.left;\n            windowElement.classList.add('fullScreen');\n            this.isFullScreen = false;\n        }\n\n        requestAnimationFrame(() => {\n            const snakeCanvas = windowElement.querySelector('#snake');\n            if (snakeCanvas) {\n                snakeCanvas.width = windowElement.offsetWidth;\n                snakeCanvas.height = windowElement.offsetHeight - windowElement.querySelector('.controller').offsetHeight;\n\n                const snakeGame = snakeCanvas.snakeGame;\n                if (snakeGame && !snakeGame.gameOver) {\n                    snakeGame.apple.left = Math.min(snakeGame.apple.left, snakeCanvas.width - 10);\n                    snakeGame.apple.top = Math.min(snakeGame.apple.top, snakeCanvas.height - 10);\n\n                    snakeGame.snake = snakeGame.snake.map(part => ({\n                        left: Math.min(part.left, snakeCanvas.width - 10),\n                        top: Math.min(part.top, snakeCanvas.height - 10)\n                    }));\n                }\n            }\n        });\n\n        windowElement.classList.remove('fullScreen');\n\n        windowElement.addEventListener('transitionend', () => {\n            windowElement.classList.remove('fullScreen');\n        });\n    }\n\n    resizeWidth(e) {\n        const parent = this.activeWindow.parentElement;\n        const parentRect = parent.getBoundingClientRect();\n        const rect = this.activeWindow.getBoundingClientRect();\n        const newWidth = e.pageX - rect.left;\n        const maxWidth = parentRect.width - rect.left;\n        this.activeWindow.style.width = Math.min(Math.max(newWidth, this.MIN_WIDTH), maxWidth) + 'px';\n        this.classWindows.bringToFront(this);\n\n        const snakeCanvas = this.activeWindow.querySelector('#snake');\n        if (snakeCanvas) {\n            snakeCanvas.width = newWidth;\n        }\n    }\n\n    resizeHeight(e) {\n        const parent = this.activeWindow.parentElement;\n        const parentRect = parent.getBoundingClientRect();\n        const rect = this.activeWindow.getBoundingClientRect();\n        const newHeight = e.pageY - rect.top;\n        const maxHeight = parentRect.height - rect.top;\n        this.activeWindow.style.height = Math.min(Math.max(newHeight, this.MIN_HEIGHT), maxHeight) + 'px';\n        this.classWindows.bringToFront(this);\n\n        const snakeCanvas = this.activeWindow.querySelector('#snake');\n        if (snakeCanvas) {\n            snakeCanvas.height = newHeight;\n        }\n    }\n\n    move() {\n        if (this.activeWindow && !this.isResizingWidth && !this.isResizingHeight && this.lastEvent) {\n            const parent = this.activeWindow.parentElement;\n            const parentRect = parent.getBoundingClientRect();\n            const navigationHeight = document.querySelector('.navigation').offsetHeight;\n            const newLeft = this.lastEvent.pageX - this.shiftX;\n            const newTop = this.lastEvent.pageY - this.shiftY;\n            const newRight = newLeft + this.activeWindow.offsetWidth;\n            const newBottom = newTop + this.activeWindow.offsetHeight;\n\n            if (newLeft >= 0 && newRight <= parentRect.width) {\n                this.activeWindow.style.left = newLeft + 'px';\n            } else if (newLeft < 0) {\n                this.activeWindow.style.left = '0px';\n            } else if (newRight > parentRect.width) {\n                this.activeWindow.style.left = (parentRect.width - this.activeWindow.offsetWidth) + 'px';\n            }\n\n            if (newTop >= navigationHeight && newBottom <= (parentRect.height + navigationHeight)) {\n                this.activeWindow.style.top = newTop + 'px';\n            } else if (newTop < navigationHeight) {\n                this.activeWindow.style.top = navigationHeight + 'px';\n            } else if (newBottom > (parentRect.height + navigationHeight)) {\n                this.activeWindow.style.top = (parentRect.height + navigationHeight - this.activeWindow.offsetHeight) + 'px';\n            }\n        }\n    }\n\n    onMouseUp() {\n        this.activeWindow = null;\n        this.isResizingWidth = false;\n        this.isResizingHeight = false;\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n        }\n    }\n\n    onMouseMove(e) {\n        this.lastEvent = e;\n        if (this.activeWindow && !this.isResizingWidth && !this.isResizingHeight) {\n            if (this.animationFrameId) {\n                cancelAnimationFrame(this.animationFrameId);\n            }\n            this.animationFrameId = requestAnimationFrame(() => this.move());\n        }\n    }\n\n    onResizeMove(e) {\n        if (this.isResizingWidth) {\n            this.resizeWidth(e);\n        } else if (this.isResizingHeight) {\n            this.resizeHeight(e);\n        }\n    }\n\n    handleMouseDown(e, controller, windowElement) {\n        const { mouseX, mouseY, windowWidth, windowHeight } = this.#getMouseAndWindowSize(e, windowElement);\n\n        this.shiftX = mouseX;\n        this.shiftY = mouseY;\n\n        if (mouseX > windowWidth * 0.98) {\n            this.isResizingWidth = true;\n            this.isResizingHeight = false;\n        } else if (mouseY > windowHeight * 0.98) {\n            this.isResizingWidth = false;\n            this.isResizingHeight = true;\n        } else if (e.target === controller) {\n            windowElement.style.position = 'absolute';\n            this.bringToFront(windowElement);\n            document.addEventListener('mousemove', (e) => this.onMouseMove(e));\n        }\n\n        this.activeWindow = windowElement;\n\n        document.addEventListener('mousemove', (e) => this.onResizeMove(e));\n    }\n\n    onMouseDown(controller, windowElement, e) {\n        this.handleMouseDown(e, controller, windowElement);\n        this.classWindows.bringToFront(this);\n    }\n\n    onWindowMouseDown(e, controller, windowElement) {\n\n        if (e.target.classList.contains('content')) {\n            return;\n        }\n\n        const { mouseX, mouseY, windowWidth, windowHeight } = this.#getMouseAndWindowSize(e, windowElement);\n\n        const resizeMargin = 10;\n\n        if (mouseX > windowWidth - resizeMargin && mouseY > windowHeight - resizeMargin) {\n            this.isResizingWidth = true;\n            this.isResizingHeight = true;\n        } else if (mouseX > windowWidth - resizeMargin) {\n            this.isResizingWidth = true;\n            this.isResizingHeight = false;\n        } else if (mouseY > windowHeight - resizeMargin) {\n            this.isResizingWidth = false;\n            this.isResizingHeight = true;\n        } else if (e.target === controller) {\n            this.handleMouseDown(e, controller, windowElement);\n        }\n\n        this.activeWindow = windowElement;\n        document.addEventListener('mousemove', (e) => this.onResizeMove(e));\n    }\n\n    onMouseMoveCursor(e, windowElement) {\n        const { mouseX, mouseY, windowWidth, windowHeight } = this.#getMouseAndWindowSize(e, windowElement);\n\n        const resizeMargin = 10;\n\n        if (mouseX > windowWidth - resizeMargin && mouseY > windowHeight - resizeMargin) {\n            document.body.style.cursor = 'nwse-resize';\n        } else if (mouseX > windowWidth - resizeMargin) {\n            document.body.style.cursor = 'ew-resize';\n        } else if (mouseY > windowHeight - resizeMargin) {\n            document.body.style.cursor = 'ns-resize';\n        } else {\n            document.body.style.cursor = 'default';\n        }\n    }\n\n    onMouseLeave() {\n        document.body.style.cursor = 'default';\n    }\n}","export class Navigation {\n    constructor() {\n        this.dateElement = document.querySelector('.navigation .date-time');\n        this.notificationCenter = document.querySelector('.notification-center');\n    }\n\n    init() {\n        this.updateDateTime();\n        setInterval(() => this.updateDateTime(), 30000);\n        this.dateElement.addEventListener('click', this.showNotificationCenter.bind(this));\n    }\n\n    showNotificationCenter() {\n        this.notificationCenter.style.display = 'block';\n    }\n\n    updateDateTime() {\n        const now = new Date();\n        const options = { day: 'numeric', month: 'long', hour: '2-digit', minute: '2-digit' };\n        const dateTimeElement = document.querySelector('.navigation .date-time');\n        let formattedDateTime = now.toLocaleDateString('fr-FR', options);\n\n        formattedDateTime = formattedDateTime.replace('Ã ', ' ');\n        dateTimeElement.textContent = formattedDateTime;\n    }\n}","export const KEY_SYMBOLS = {\n    ArrowUp: 'â',\n    ArrowDown: 'â',\n    ArrowLeft: 'â',\n    ArrowRight: 'â'\n};","export const params1 = (className) => {\n    return `\n        <div id=\"param1_content\" class=\"${ className }\">\n            <h2>ParamÃ¨tres</h2>\n            <div>\n                <label for=\"theme\">Fond d'Ã©cran</label>\n                <select name=\"theme\" id=\"theme\">\n                    <option value=\"pattern\">Pattern 0</option>\n                    <option value=\"pattern-1\">Pattern 1</option>\n                </select>\n            </div>\n            <div class=\"controller-settings\">\n                <p>Placement des boutons de contrÃ´le des fenÃªtres</p>\n                <label for=\"control-left\">Gauche</label>\n                <input type=\"radio\" name=\"control\" value=\"left\" id=\"control-left\" ${ localStorage.getItem('controllerPlacement') === \"left\" ? \"checked\" : \"\" }>\n                <label for=\"control-right\">Droite</label>\n                <input type=\"radio\" name=\"control\" value=\"right\" id=\"control-right\" ${ localStorage.getItem('controllerPlacement') === \"right\" ? \"checked\" : \"\" }>\n            </div>\n        </div>\n    `\n}","export const params2 = (className) => {\n    return `\n        <div id=\"param1_content\" class=\"${ className }\">\n            <p>ParamÃ¨tres 2</p>\n        </div>\n    `\n}","export const params4 = (className) => {\n\n    const keys = JSON.parse(localStorage.getItem('keys')) || {\n        up: 'ArrowUp',\n        down: 'ArrowDown',\n        left: 'ArrowLeft',\n        right: 'ArrowRight'\n    };\n\n    const snakeColor = localStorage.getItem('snakeColor') || '#38B35E';\n\n    const keySymbols = {\n        ArrowUp: 'â',\n        ArrowDown: 'â',\n        ArrowLeft: 'â',\n        ArrowRight: 'â'\n    };\n\n    const upSymbol = keySymbols[keys.up] || keys.up;\n    const downSymbol = keySymbols[keys.down] || keys.down;\n    const leftSymbol = keySymbols[keys.left] || keys.left;\n    const rightSymbol = keySymbols[keys.right] || keys.right;\n\n    const pauseKey = localStorage.getItem('pauseKey') || 'p';\n    const pauseSymbol = keySymbols[pauseKey] || pauseKey;\n\n    return `\n        <div id=\"param7_content\" class=\"${ className }\">\n            <h2>ParamÃ¨tres du jeu Snake ð</h2>\n            <p class=\"controller-text\">Personnalisez les <span class=\"bold\">touches</span> du serpent.</p>\n            <div class=\"map-container\">\n                <div class=\"key-label\"></div>\n                <div class=\"key-input toucheH\" id=\"up-key\" tabindex=\"0\">${upSymbol}</div>\n                <div class=\"key-label\"></div>\n                <div class=\"key-input toucheG\" id=\"left-key\" tabindex=\"0\">${leftSymbol}</div>\n                <div class=\"key-input toucheB\" id=\"down-key\" tabindex=\"0\">${downSymbol}</div>\n                <div class=\"key-input toucheD\" id=\"right-key\" tabindex=\"0\">${rightSymbol}</div>\n            </div>\n            <div class=\"pause-container\">\n                <span class=\"pause-label\">Personnalisez la touche <span class=\"bold\">Pause</span>.</span>\n                <div class=\"key-input toucheP\" id=\"pause-key\" tabindex=\"0\">${pauseSymbol}</div>\n            </div>\n            <div class=\"color-container\">\n                <label for=\"snake-color\">Personnalisez la <span class=\"bold\">couleur</span> du serpent.</label>\n                <input type=\"color\" id=\"snake-color\" name=\"snake-color\" value=\"${snakeColor}\">\n            </div>\n        </div>\n    `;\n}","import { params1 } from \"./options/params1.js\";\nimport { params2 } from \"./options/params2.js\";\nimport { params4 } from \"./options/params4.js\";\n\nexport const paramsController = {\n    'param1': params1('test'),\n    'param2': params2('test 2'),\n    'param4': params4('test 2')\n};","import { WindowController } from '../Controller.js';\nimport { Navigation } from \"./Navigation.js\";\n\nimport { KEY_SYMBOLS } from '../../contents/parameters/key_symbols.js';\nimport { paramsController } from \"../../contents/parameters/controller.js\";\n\nexport class Windows {\n\n    constructor() {\n        this.windows = [];\n        this.highestZIndex = 0;\n        this.contentParams = paramsController;\n        localStorage.setItem('controllerPlacement', 'right');\n        this.classNavigation = new Navigation();\n        this.init();\n    }\n\n    init() {\n        this.classNavigation.init();\n    }\n\n    addWindow(windowController) {\n        this.windows.push(windowController);\n    }\n\n    createWindowElement(position, icon, title, content) {\n        return `\n            <div class=\"window position-${ position } ${title === 'Snake' ? 'snake-window' : ''}\" data-name=\"${ title }\" style=\"--random-color: ${this.getRandomColor()}\">\n                <div class=\"controller block_highlights ${ localStorage.getItem(\"controllerPlacement\") === \"left\" ? 'row-reverse' : '' }\">\n                    <p>${ title }</p>\n                    <div class=\"icon_controller\">\n                        <span class=\"minus\"></span>\n                        <span class=\"expand\"></span>\n                        <span class=\"close\"></span>\n                    </div>\n                </div>\n                <div class=\"content\">\n                    ${ content }\n                </div>\n            </div>\n        `;\n    }\n\n    getRandomColor() {\n        let color = Math.floor(Math.random()*16777215).toString(16);\n        while (color.length < 6) {\n            color = '0' + color;\n        }\n        return '#' + color;\n    }\n\n    createNewWindow(position, icon, title, contentFunction) {\n        const content = typeof contentFunction === 'function' ? contentFunction() : contentFunction;\n        const windowsElement = this.createWindowElement(position, icon, title, content);\n\n        document.querySelector('.windows_area').insertAdjacentHTML('beforeend', windowsElement);\n        const newWindowElement = document.querySelector('.windows_area').lastElementChild;\n        const newWindowController = new WindowController(this, newWindowElement, icon);\n        this.addWindow(newWindowController);\n\n        newWindowElement.id = `window-${Date.now()}`;\n        newWindowController.init(newWindowElement);\n\n        newWindowElement.addEventListener('click', () => {\n            this.bringToFront(newWindowController);\n        });\n\n        this.bringToFront(newWindowController);\n        this.addNavigationClickHandler(newWindowElement);\n        return newWindowElement;\n    }\n\n    addNavigationClickHandler(newWindowElement) {\n        const navItems = newWindowElement.querySelector('.param_nav');\n        const contentContainer = newWindowElement.querySelector('.param_content');\n        let activeInput = null;\n\n        if (navItems) {\n            navItems.addEventListener('click', (e) => {\n                if(e.target.tagName === 'LI') {\n                    this.handleNavigationClick(e, contentContainer, newWindowElement, activeInput);\n                }\n            });\n        }\n    }\n\n    handleNavigationClick(e, contentContainer, newWindowElement, activeInput) {\n        const id = e.target.getAttribute('id');\n        contentContainer.innerHTML = this.contentParams[id] || '';\n        this.addBackgroundChangeHandler(newWindowElement);\n\n        const controlLeftRadio = newWindowElement.querySelector('#control-left');\n        const controlRightRadio = newWindowElement.querySelector('#control-right');\n\n        if (controlLeftRadio && controlRightRadio) {\n            controlLeftRadio.addEventListener('change', () => this.changeControllerPlacement('left'));\n            controlRightRadio.addEventListener('change', () => this.changeControllerPlacement('right'));\n        }\n\n        const snakeColorInput = newWindowElement.querySelector('#snake-color');\n        if (snakeColorInput) {\n            this.addSnakeColorChangeHandler(snakeColorInput);\n        }\n\n        const keyInputs = newWindowElement.querySelectorAll('.key-input');\n        keyInputs.forEach(input => {\n            this.addKeyInputHandlers(input, activeInput, newWindowElement);\n        });\n    }\n\n    addSnakeColorChangeHandler(snakeColorInput) {\n        snakeColorInput.addEventListener('change', (e) => {\n            this.changeSnakeColor(e.target.value);\n        });\n    }\n\n    addKeyInputHandlers(input, activeInput, newWindowElement) {\n        input.addEventListener('click', () => {\n            if (activeInput) {\n                activeInput.classList.remove('active');\n            }\n            input.classList.add('active');\n            activeInput = input;\n        });\n        input.addEventListener('keydown', (e) => {\n            this.handleKeydownOnInput(e, input, newWindowElement);\n        });\n    }\n\n    handleKeydownOnInput(e, input, newWindowElement) {\n        e.preventDefault();\n        const newKey = e.key;\n        input.textContent = KEY_SYMBOLS[newKey] || newKey;\n\n        if(input.classList.contains('toucheP')) {\n            this.changeSnakePause(input.textContent);\n        }\n\n        const newKeys = {\n            up: newWindowElement.querySelector('#up-key').textContent === 'â' ? 'ArrowUp' : newWindowElement.querySelector('#up-key').textContent,\n            down: newWindowElement.querySelector('#down-key').textContent === 'â' ? 'ArrowDown' : newWindowElement.querySelector('#down-key').textContent,\n            left: newWindowElement.querySelector('#left-key').textContent === 'â' ? 'ArrowLeft' : newWindowElement.querySelector('#left-key').textContent,\n            right: newWindowElement.querySelector('#right-key').textContent === 'â' ? 'ArrowRight' : newWindowElement.querySelector('#right-key').textContent\n        };\n        this.changeKeySnake(newKeys);\n    }\n\n    changeControllerPlacement(placement) {\n        const controllers = document.querySelectorAll('.controller');\n\n        controllers.forEach(controller => {\n            if (placement === 'left') {\n                controller.style.flexDirection = 'row-reverse';\n                controller.querySelector('.icon_controller').style.flexDirection = 'row-reverse';\n            } else {\n                controller.style.flexDirection = 'row';\n                controller.querySelector('.icon_controller').style.flexDirection = 'row';\n            }\n        });\n\n        localStorage.setItem('controllerPlacement', placement);\n    }\n\n    changeSnakeColor(newColor) {\n        localStorage.setItem('snakeColor', newColor);\n    }\n\n    changeSnakePause(newKey) {\n        localStorage.setItem('pauseKey', newKey);\n    }\n\n    changeBackground(theme) {\n        document.body.style.backgroundImage = `url('/${theme}.svg')`;\n    }\n\n    changeKeySnake(newKeys) {\n        localStorage.setItem('keys', JSON.stringify(newKeys));\n    }\n\n    addBackgroundChangeHandler(newWindowElement) {\n        const themeSelector = newWindowElement.querySelector('#theme');\n        if (themeSelector) {\n            themeSelector.addEventListener('change', (e) => {\n                this.changeBackground(e.target.value);\n            });\n        }\n    }\n\n    bringToFront(windowController) {\n        windowController.zIndex = ++this.highestZIndex;\n        windowController.windowElement.style.zIndex = this.highestZIndex;\n    }\n\n    createPopup(message, buttonText1, buttonText2) {\n        const blurBackground = document.createElement('div');\n        blurBackground.classList.add('blur-background');\n\n        const popup = document.createElement('div');\n        popup.classList.add('popup');\n\n        const text = document.createElement('p');\n        text.textContent = message;\n        popup.appendChild(text);\n\n        if (buttonText1) {\n            const button1 = document.createElement('button');\n            button1.textContent = buttonText1;\n            popup.appendChild(button1);\n        }\n\n        if (buttonText2) {\n            const button2 = document.createElement('button');\n            button2.textContent = buttonText2;\n            popup.appendChild(button2);\n        }\n\n        blurBackground.appendChild(popup);\n        document.body.appendChild(blurBackground);\n    }\n}","export const params = `\n     <div class=\"param_nav\">\n        <ul>\n            <li id=\"param1\">Apparence</li>\n            <li id=\"param2\">Dock Proto</li>\n            <li id=\"param3\">Notifications</li>\n            <li id=\"param4\">Snake</li>\n            <li id=\"param5\">SystÃ¨me</li>\n            <li id=\"param6\">Ã Propos</li>\n        </ul>\n     </div>\n    <div class=\"param_content\"></div>\n`","export class ClassNotifications {\n    constructor() {\n        this.notifications = [];\n        this.notificationContainer = document.querySelector('.notification-center');\n        this.timeOutNotification = 60000;\n    }\n\n    addNotification(notification) {\n        this.notifications.push(notification);\n        this.notificationContainer.appendChild(notification);\n    }\n\n    createNotificationElement(title, message) {\n        const notification = document.createElement('div');\n        const h2 = document.createElement('h2');\n        const messageDiv = document.createElement('div');\n        const contentDiv = document.createElement('div');\n\n        h2.textContent = title;\n        messageDiv.textContent = message;\n\n        contentDiv.appendChild(h2);\n        contentDiv.appendChild(messageDiv);\n        contentDiv.classList.add('notification-content');\n\n        notification.className = 'notification';\n        notification.appendChild(contentDiv);\n\n        return notification;\n    }\n\n    addNotificationButton(notification, button, buttonAction) {\n        button.addEventListener('click', () => {\n            if (buttonAction) {\n                buttonAction();\n            }\n            this.notificationContainer.removeChild(notification);\n        });\n        notification.appendChild(button);\n    }\n\n    setNotificationColor(notification, color) {\n        if (color) {\n            notification.style.setProperty('--notification-color', color);\n        }\n    }\n\n    displayNotification(title, message, button = null, buttonAction = null, color = null) {\n        const notification = this.createNotificationElement(title, message);\n\n        if (button) {\n            this.addNotificationButton(notification, button, buttonAction);\n        }\n\n        this.setNotificationColor(notification, color);\n\n        this.addNotification(notification);\n        this.removeTimeoutNotification(notification);\n    }\n\n    removeTimeoutNotification(notification) {\n        setTimeout(() => {\n            const index = this.notifications.indexOf(notification);\n            if (index > -1) {\n                this.notifications.splice(index, 1);\n                const replayButton = notification.querySelector('.replay-button');\n                if (replayButton) {\n                    replayButton.remove();\n                }\n                notification.remove();\n            }\n        }, this.timeOutNotification);\n    }\n}","import { ClassNotifications } from \"../System/Notifications.js\";\nimport { params } from \"../../contents/parameters/options/params.js\";\n\nexport class Snake {\n\n    constructor(canvasId, windows) {\n        this.canvasId = canvasId;\n        this.windows = windows;\n        this.canvas = null;\n        this.context = null;\n        this.snake = [{ top: 200, left: 200 }];\n        this.direction = 'right';\n        this.apple = null;\n        this.gameOver = false;\n        this.walls = [];\n        this.board = [];\n        this.lastKey = null;\n        this.baseScore = 0;\n        this.directionQueue = [];\n        this.speed = 100;\n        this.fastSpeed = 40;\n        this.fastModeStartTime = null;\n        this.currentSpeed = this.speed;\n        this.speedTimeout = null;\n        this.lastWallScore = 0;\n        this.goldenApple = null;\n        this.goldenAppleTimeout = null;\n        this.lastTime = Date.now();\n        this.isPaused = false;\n        this.lastTailPosition = null;\n        this.gameLoop = this.gameLoop.bind(this);\n        this.snakeColor = '#0e881f';\n        this.keyIsDown = false;\n        this.stamina = 100;\n    }\n\n    init() {\n        this.directionQueue = [];\n        this.setupCanvas();\n        this.createMainMenu();\n        this.setupEventHandlers();\n    }\n\n    createMainMenu() {\n        this.mainMenu = document.createElement('div');\n        this.mainMenu.classList.add('main-menu');\n        this.mainMenu.style.position = 'absolute';\n        this.mainMenu.style.top = document.querySelector('.controller').offsetHeight + 'px';\n        this.mainMenu.style.left = '0';\n        this.mainMenu.style.width = '100%';\n        this.mainMenu.style.height = `calc(100% - ${ document.querySelector('.controller').offsetHeight + 'px' })`;\n\n        const textTitle = document.createElement('h3');\n        textTitle.textContent = 'Snake 0.1';\n\n        const startButton = document.createElement('button');\n        startButton.textContent = 'Nouvelle partie';\n\n        const optionButton = document.createElement('button');\n        optionButton.textContent = 'Options';\n\n        startButton.addEventListener('click', () => {\n            this.mainMenu.style.display = 'none';\n            this.setupGame();\n            this.gameLoop();\n        });\n\n        optionButton.addEventListener('click', () => {\n            const newWindow = this.windows.createNewWindow(\"center\", \"./images/parameters.png\", 'ParamÃ¨tres', params);\n\n            setTimeout(() => {\n                const snakeNavItem = newWindow.querySelector('#param4');\n                if (snakeNavItem) {\n                    snakeNavItem.click();\n                }\n            }, 0);\n        });\n\n        this.mainMenu.appendChild(textTitle);\n        this.mainMenu.appendChild(startButton);\n        this.mainMenu.appendChild(optionButton);\n        this.canvas.parentElement.appendChild(this.mainMenu);\n    }\n\n    setupCanvas() {\n        this.canvas = document.getElementById(this.canvasId);\n        this.context = this.canvas.getContext('2d');\n        this.board = Array(this.canvas.width / 10).fill(undefined, undefined, undefined).map(() => Array(this.canvas.height / 10).fill(0));\n        this.createPauseOverlay();\n        this.snakeColor = localStorage.getItem('snakeColor') || '#0e881f';\n        this.canvas.parentElement.appendChild(this.pauseOverlay);\n    }\n\n    setupGame() {\n        this.draw();\n        this.update();\n        this.snake = [{ top: 200, left: 200 }];\n        this.walls = [];\n        this.apple = null;\n        this.direction = 'right';\n        this.gameOver = false;\n    }\n\n    setupEventHandlers() {\n        let keys = localStorage.getItem('keys');\n        keys = keys ? JSON.parse(keys) : {\n            up: 'ArrowUp',\n            down: 'ArrowDown',\n            left: 'ArrowLeft',\n            right: 'ArrowRight'\n        };\n\n        if (this.keydownHandler) {\n            window.removeEventListener('keydown', this.keydownHandler);\n        }\n\n        this.keydownHandler = this.createKeydownHandler(keys);\n        window.addEventListener('keydown', this.keydownHandler);\n\n        if (this.keyupHandler) {\n            window.removeEventListener('keyup', this.keyupHandler);\n        }\n\n        this.keyupHandler = this.createKeyupHandler(keys);\n        window.addEventListener('keyup', this.keyupHandler);\n\n        if (this.keydownPauseHandler) {\n            window.removeEventListener('keydown', this.keydownPauseHandler);\n        }\n\n        this.keydownPauseHandler = (e) => this.handleKeyDown(e);\n        window.addEventListener('keydown', this.keydownPauseHandler);\n    }\n\n    createKeydownHandler(keys) {\n        return (e) => {\n            const mappedKey = Object.keys(keys).find(key => keys[key].toLowerCase() === e.key.toLowerCase());\n            if (mappedKey && (!this.lastKey || this.lastKey !== mappedKey)) {\n                this.directionQueue.push(mappedKey);\n                this.lastKey = mappedKey;\n            }\n            if (!this.speedTimeout && !this.keyIsDown && this.direction === mappedKey) {\n                this.keyIsDown = true;\n                this.fastModeStartTime = Date.now();\n                this.speedTimeout = setTimeout(() => {\n                    this.currentSpeed = this.fastSpeed;\n                    this.speedTimeout = null;\n                }, 100);\n                this.stamina -= 1;\n                if (this.stamina === 0) {\n                    this.snake.length = Math.max(1, this.snake.length - 1);\n                }\n            }\n        };\n    }\n\n    createKeyupHandler(keys) {\n        return (e) => {\n            this.keyIsDown = false;\n            this.changeDirection(e.key, keys);\n            if (this.speedTimeout) {\n                clearTimeout(this.speedTimeout);\n                this.speedTimeout = null;\n            }\n            if (this.fastModeStartTime) {\n                const fastModeDuration = Date.now() - this.fastModeStartTime;\n                if (fastModeDuration > 700 && this.stamina === 0) {\n                    this.snake.length = Math.max(1, this.snake.length - 1);\n                }\n                this.fastModeStartTime = null;\n            }\n            this.currentSpeed = this.speed;\n            this.lastKey = null;\n\n            if (this.staminaRefillInterval) {\n                clearInterval(this.staminaRefillInterval);\n            }\n\n            this.staminaRefillInterval = setInterval(() => {\n                if (this.stamina < 100) {\n                    this.stamina++;\n                } else {\n                    clearInterval(this.staminaRefillInterval);\n                }\n            }, 75);\n        };\n    }\n\n    createPauseOverlay() {\n        this.pauseOverlay = document.createElement('div');\n        this.pauseOverlay.style.position = 'absolute';\n        this.pauseOverlay.style.top = '40px';\n        this.pauseOverlay.style.left = '0';\n        this.pauseOverlay.style.width = '100%';\n        this.pauseOverlay.style.height = 'calc(100% - 40px)';\n        this.pauseOverlay.style.display = 'none';\n        this.pauseOverlay.style.borderRadius = '0 0 10px 10px';\n        this.pauseOverlay.style.justifyContent = 'center';\n        this.pauseOverlay.style.alignItems = 'center';\n        this.pauseOverlay.style.backgroundColor = 'rgba(255, 255, 255, 0.2)';\n        this.pauseOverlay.style.backdropFilter = 'blur(8px)';\n        this.pauseOverlay.innerHTML = '<img class=\"pause\" src=\"./pause.svg\" alt=\"Pause\">';\n    }\n\n    drawScore() {\n        this.context.fillStyle = 'black';\n        this.context.font = '16px Arial';\n        const score = this.snake.length - 1;\n        this.context.fillText('Score: ' + score, 10, 30);\n        const bestScore = localStorage.getItem('bestScore') || 0;\n        this.context.fillText('Meilleur score: ' + bestScore, 120, 30);\n    }\n\n    updateBestScore() {\n        const score = this.snake.length - 1;\n        const bestScore = localStorage.getItem('bestScore') || 0;\n        if (score > bestScore) {\n            localStorage.setItem('bestScore', score.toString());\n        }\n    }\n\n    gameLoop() {\n        if (this.isPaused) {\n            requestAnimationFrame((time) => this.gameLoop(time));\n            return;\n        }\n        if (!this.gameOver) {\n            const now = Date.now();\n            const elapsed = now - this.lastTime;\n\n            if (elapsed > this.currentSpeed) {\n                this.lastTime = now - (elapsed % this.currentSpeed);\n                this.update();\n            }\n\n            if (this.keyIsDown) {\n                this.stamina = Math.max(this.stamina - 1, 0);\n                if (this.stamina === 0) {\n                    if (!this.scoreInterval) {\n                        this.scoreInterval = setInterval(() => {\n                            this.baseScore = Math.max(0, this.baseScore - 1);\n                            this.snake.length = Math.max(1, this.snake.length - 1);\n                        }, 1000);\n                    }\n                } else if (this.scoreInterval) {\n                    clearInterval(this.scoreInterval);\n                    this.scoreInterval = null;\n                }\n            } else if (this.scoreInterval) {\n                clearInterval(this.scoreInterval);\n                this.scoreInterval = null;\n            }\n\n            this.draw();\n        }\n        requestAnimationFrame((time) => this.gameLoop(time));\n    }\n\n    draw() {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.drawStaminaBar();\n        \n        this.snakeColor = localStorage.getItem('snakeColor') || '#0e881f';\n        this.context.fillStyle = this.snakeColor;\n\n        if (this.lastTailPosition) {\n            this.context.clearRect(this.lastTailPosition.left, this.lastTailPosition.top, 10, 10);\n        }\n\n        this.snake.forEach((part, index) => {\n            this.context.fillRect(part.left, part.top, 10, 10);\n            if (index === 0) {\n                this.context.fillStyle = 'white';\n                if (this.direction === 'right' || this.direction === 'left') {\n                    this.context.fillRect(part.left + 2, part.top + 2, 2, 2);\n                    this.context.fillRect(part.left + 6, part.top + 2, 2, 2);\n                } else {\n                    this.context.fillRect(part.left + 2, part.top + 2, 2, 2);\n                    this.context.fillRect(part.left + 2, part.top + 6, 2, 2);\n                }\n                this.context.fillStyle = this.snakeColor;\n            }\n        });\n\n        if (this.apple) {\n            this.context.beginPath();\n            this.context.arc(this.apple.left + 5, this.apple.top + 5, 5, 0, Math.PI * 2, true);\n            this.context.closePath();\n            this.context.fillStyle = 'red';\n            this.context.fill();\n            this.context.fillStyle = 'green';\n            this.context.fillRect(this.apple.left + 2, this.apple.top - 2, 3, 2);\n            this.context.fillRect(this.apple.left + 5, this.apple.top - 2, 3, 2);\n        }\n        if (this.goldenApple) {\n            this.context.beginPath();\n            this.context.arc(this.goldenApple.left + 5, this.goldenApple.top + 5, 5, 0, Math.PI * 2, true);\n            this.context.closePath();\n            this.context.fillStyle = 'gold';\n            this.context.fill();\n\n            this.context.fillStyle = 'green';\n            this.context.fillRect(this.goldenApple.left + 2, this.goldenApple.top - 2, 3, 2);\n            this.context.fillRect(this.goldenApple.left + 5, this.goldenApple.top - 2, 3, 2);\n        }\n        this.drawScore();\n        this.context.fillStyle = 'black';\n        this.walls.forEach(wall => {\n            this.context.fillRect(wall.left, wall.top, 10, 10);\n        });\n    }\n\n    drawStaminaBar() {\n        this.context.fillStyle = 'black';\n        this.context.fillRect(10, 50, 100, 10);\n        this.context.fillStyle = '#1a33b8';\n        this.context.fillRect(10, 50, this.stamina, 10);\n    }\n\n    checkSelfCollision() {\n        const head = this.snake[0];\n        return this.board[head.left / 10][head.top / 10] === 1;\n    }\n\n    update() {\n        if (this.directionQueue.length > 0) {\n            this.direction = this.directionQueue.shift();\n        }\n        const head = this.calculateNewHeadPosition();\n\n        if (this.isOutOfBounds(head)) {\n            this.handleGameOver();\n            return;\n        }\n\n        this.updateBoard();\n\n        this.snake.unshift(head);\n        this.updateOccupiedPositions();\n\n        if (this.apple && this.isAppleEaten(head)) {\n            this.apple = null;\n            this.baseScore++;\n        } else {\n            this.updateTailPosition();\n            this.snake.pop();\n        }\n\n        if (this.goldenApple && this.isGoldenAppleEaten(head)) {\n            this.extendSnake();\n            this.removeGoldenApple();\n        }\n\n        if (this.checkSelfCollision() || this.checkWallCollision()) {\n            this.handleGameOver();\n        }\n\n        if (!this.apple) {\n            this.generateApple();\n        }\n\n        this.generateWalls();\n        this.updateBestScore();\n    }\n\n    calculateNewHeadPosition() {\n        const head = Object.assign({}, this.snake[0]);\n        switch (this.direction) {\n            case 'left':\n                head.left -= 10;\n                break;\n            case 'up':\n                head.top -= 10;\n                break;\n            case 'right':\n                head.left += 10;\n                break;\n            case 'down':\n                head.top += 10;\n                break;\n        }\n        return head;\n    }\n\n    isOutOfBounds(head) {\n        return head.left < 0 || head.left >= this.canvas.width || head.top < 0 || head.top >= this.canvas.height;\n    }\n\n    updateBoard() {\n        this.board = this.board.map((row, x) => row.map((cell, y) => {\n            if (this.snake.some(part => part.left === x * 10 && part.top === y * 10)) {\n                return 1;\n            } else if (this.apple && this.apple.left === x * 10 && this.apple.top === y * 10) {\n                return 2;\n            } else if (this.goldenApple && this.goldenApple.left === x * 10 && this.goldenApple.top === y * 10) {\n                return 3;\n            } else if (this.walls.some(wall => wall.left === x * 10 && wall.top === y * 10)) {\n                return 4;\n            } else {\n                return 0;\n            }\n        }));\n    }\n\n    updateOccupiedPositions() {\n        this.occupiedPositions = new Set(this.snake.map(part => `${part.left},${part.top}`));\n        this.walls.forEach(wall => this.occupiedPositions.add(`${wall.left},${wall.top}`));\n    }\n\n    isAppleEaten(head) {\n        return this.apple.top === head.top && this.apple.left === head.left;\n    }\n\n    updateTailPosition() {\n        this.lastTailPosition = { ...this.snake[this.snake.length - 1] };\n    }\n\n    isGoldenAppleEaten(head) {\n        return this.goldenApple.top === head.top && this.goldenApple.left === head.left;\n    }\n\n    extendSnake() {\n        for (let i = 0; i < 5; i++) {\n            const lastElement = this.snake[this.snake.length - 1];\n            this.snake.push({ top: lastElement.top, left: lastElement.left });\n        }\n    }\n\n    removeGoldenApple() {\n        clearTimeout(this.goldenAppleTimeout);\n        this.goldenApple = null;\n        this.goldenAppleTimeout = null;\n    }\n\n    changeDirection(key, keys) {\n        const lowerCaseKey = key.toLowerCase();\n        const lowerCaseKeys = {\n            up: keys.up.toLowerCase(),\n            down: keys.down.toLowerCase(),\n            left: keys.left.toLowerCase(),\n            right: keys.right.toLowerCase()\n        };\n\n        switch (lowerCaseKey) {\n            case lowerCaseKeys.up:\n                this.direction = 'up';\n                break;\n            case lowerCaseKeys.down:\n                this.direction = 'down';\n                break;\n            case lowerCaseKeys.left:\n                this.direction = 'left';\n                break;\n            case lowerCaseKeys.right:\n                this.direction = 'right';\n                break;\n        }\n    }\n\n    checkWallCollision() {\n        const head = this.snake[0];\n        return this.board[head.left / 10][head.top / 10] === 4;\n    }\n\n    stopGame() {\n        this.gameOver = true;\n    }\n\n    generateWalls() {\n        if (this.baseScore >= 10 && this.baseScore - this.lastWallScore >= 10) {\n            const numberOfWalls = Math.pow(this.baseScore, 1);\n            for (let i = 0; i < numberOfWalls; i++) {\n                let wall;\n                do {\n                    wall = {\n                        top: Math.floor(Math.random() * this.canvas.height / 10) * 10,\n                        left: Math.floor(Math.random() * this.canvas.width / 10) * 10\n                    };\n                } while (this.isTooCloseToSnake(wall, 30));\n                this.walls.push(wall);\n            }\n            this.lastWallScore = this.baseScore;\n        }\n    }\n\n    isTooCloseToSnake(position, minDistance) {\n        const snakeHead = this.snake[0];\n        const distance = Math.sqrt(Math.pow(position.left - snakeHead.left, 2) + Math.pow(position.top - snakeHead.top, 2));\n        return distance < minDistance;\n    }\n\n    generateApple() {\n        const freePositions = this.getFreePositions();\n        const randomIndex = Math.floor(Math.random() * freePositions.length);\n        this.apple = freePositions[randomIndex];\n\n        if (Math.random() < 0.10) {\n            const goldenAppleIndex = Math.floor(Math.random() * freePositions.length);\n            this.goldenApple = freePositions[goldenAppleIndex];\n            this.goldenAppleTimeout = setTimeout(() => this.removeGoldenApple(), 6000);\n        }\n\n        this.board[this.apple.left / 10][this.apple.top / 10] = 2;\n    }\n\n    getFreePositions() {\n        const freePositions = [];\n        for (let x = 0; x < this.board.length; x++) {\n            for (let y = 0; y < this.board[0].length; y++) {\n                if (this.board[x][y] === 0) {\n                    freePositions.push({ left: x * 10, top: y * 10 });\n                }\n            }\n        }\n        return freePositions;\n    }\n\n    handleGameOver() {\n        if (!this.gameOver) {\n            this.gameOver = true;\n\n            const notifications = new ClassNotifications();\n            const replayButton = document.createElement('button');\n            const parentWindow = this.canvas.closest('.window');\n            const style = getComputedStyle(parentWindow);\n            const color = style.getPropertyValue('--random-color');\n            let existingReplayButton = this.canvas.parentElement.querySelector('.replay-button');\n\n\n            replayButton.textContent = 'Rejouer';\n\n            if (!existingReplayButton) {\n                notifications.displayNotification('Game Over', 'Score: ' + (this.snake.length - 1), replayButton, null, color);\n            }\n\n            replayButton.onclick = null;\n            replayButton.addEventListener('click', () => this.restartGame());\n\n            this.updateBestScore();\n        }\n    }\n\n    handleKeyDown(e) {\n        const pauseKey = localStorage.getItem('pauseKey') || 'p';\n        if (e.key.toLowerCase() === pauseKey.toLowerCase()) {\n            this.isPaused = !this.isPaused;\n            if (this.isPaused) {\n                this.pauseOverlay.style.display = 'flex';\n            } else {\n                this.pauseOverlay.style.display = 'none';\n                this.gameLoop();\n            }\n        }\n    }\n\n    restartGame() {\n        const oldWidth = this.canvas.width;\n        const oldHeight = this.canvas.height;\n        const newCanvas = document.createElement('canvas');\n        newCanvas.id = this.canvasId;\n        newCanvas.classList.add('snake');\n        newCanvas.width = oldWidth;\n        newCanvas.height = oldHeight;\n        this.canvas.replaceWith(newCanvas);\n        this.canvas = newCanvas;\n        this.pauseOverlay.remove();\n        this.init();\n    }\n}","export class Doom {\r\n    constructor(canvasId, windows) {\r\n        this.canvasId = canvasId;\r\n        this.windows = windows;\r\n        this.emulator = null;\r\n\r\n        // Ajout du gestionnaire d'Ã©vÃ©nements pour le bouton .close\r\n        this.addCloseButtonHandler();\r\n    }\r\n\r\n    addCloseButtonHandler() {\r\n        if (!this.canvasId) return;\r\n\r\n        const closeButton = document.querySelector('.close');\r\n        if (!closeButton) {\r\n            console.error(\"Element with class 'close' not found.\");\r\n            return;\r\n        }\r\n\r\n        closeButton.addEventListener('click', this.stop.bind(this));\r\n    }\r\n\r\n    launch() {\r\n        const jsdosElement = document.getElementById(this.canvasId);\r\n        if (!jsdosElement) {\r\n            console.error(`Element with id '${this.canvasId}' not found.`);\r\n            return;\r\n        }\r\n\r\n        emulators.pathPrefix = \"./JS-DOS/\";\r\n        this.emulator = Dos(jsdosElement, {\r\n            wdosboxUrl: \"./JS-DOS/wdosbox.js\",\r\n        });\r\n\r\n        this.removeFlexGrowElements(jsdosElement);\r\n\r\n        this.emulator.run(\"./doom.jsdos\").then(() => {\r\n            console.log(\"Emulator is running.\");\r\n        }).catch(error => {\r\n            console.error(\"Error running emulator:\", error);\r\n        });\r\n    }\r\n\r\n    removeFlexGrowElements(parentElement) {\r\n        const elements = parentElement.getElementsByClassName('flex-grow-0');\r\n        while (elements.length > 0) {\r\n            elements[0].remove();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if (this.emulator) {\r\n            this.emulator.stop();\r\n            console.log(\"Emulator stopped.\");\r\n        } else {\r\n            console.error(\"No emulator instance to stop.\");\r\n        }\r\n    }\r\n}","export class hierarchy {\n    constructor(desktop) {\n        this.desktop = desktop;\n        this.trash = [];\n    }\n\n    onTrashDrop(e) {\n        e.preventDefault();\n        const folderName = e.dataTransfer.getData('text/plain');\n        const folderElement = document.querySelector(`.desktop-folder[data-name=\"${folderName}\"]`);\n        if (folderElement && folderElement.dataset.name !== 'Poubelle') {\n            this.removeFolderAndWindow(folderElement);\n        }\n    }\n\n    moveSelectedFoldersToTrash() {\n        this.desktop.selectedFolders.forEach(folder => {\n            if (folder.dataset.name !== 'Poubelle') {\n                this.trash.push(folder);\n                folder.remove();\n                const [x, y] = this.desktop.getFolderPosition(folder);\n                this.desktop.grid[x][y] = 0;\n                const windowElement = document.querySelector(`.window[data-name=\"${folder.dataset.name}\"]`);\n                if (windowElement) {\n                    windowElement.remove();\n                }\n            }\n        });\n        this.desktop.selectedFolders = [];\n    }\n\n    addRestoreEvent(folderElementInWindow) {\n        const restoreEvent = (e) => {\n            const contextMenu = this.desktop.createContextMenu(e, folderElementInWindow); // Pass folderElementInWindow here\n            contextMenu.querySelector('.restore').addEventListener('click', () => {\n                this.trash = this.trash.filter(folder => folder.dataset.name !== folderElementInWindow.dataset.name);\n                this.desktop.setFolderPosition(folderElementInWindow);\n                folderElementInWindow.setAttribute('draggable', 'true');\n                document.querySelector('.windows_area').appendChild(folderElementInWindow);\n                contextMenu.remove();\n                this.updateTrashWindowContent();\n                folderElementInWindow.removeEventListener('contextmenu', restoreEvent);\n                this.moveToTrash(folderElementInWindow);\n                const restoredWindowContent = this.desktop.content[folderElementInWindow.dataset.name];\n                this.desktop.addDoubleClickEvent(folderElementInWindow, folderElementInWindow.dataset.name, restoredWindowContent, 'icon_du_dossier');\n                if (folderElementInWindow.closest('.window')) {\n                    folderElementInWindow.closest('.window').removeChild(folderElementInWindow);\n                }\n                this.desktop.addDragEvents(folderElementInWindow, folderElementInWindow.dataset.name);\n            });\n            document.body.appendChild(contextMenu);\n        };\n        folderElementInWindow.addEventListener('contextmenu', restoreEvent);\n    }\n\n    removeFolderAndWindow(folderElement) {\n        this.trash.push(folderElement);\n        folderElement.remove();\n        const trashUpdatedEvent = new CustomEvent('trashUpdated');\n        document.dispatchEvent(trashUpdatedEvent);\n        const [x, y] = this.desktop.getFolderPosition(folderElement);\n        this.desktop.grid[x][y] = 0;\n        const windowElement = document.querySelector(`.window[data-name=\"${folderElement.dataset.name}\"]`);\n        if (windowElement) {\n            windowElement.remove();\n        }\n    }\n\n    moveToTrash(folderElement) {\n        if (folderElement.dataset.name === 'Poubelle') return;\n        folderElement.addEventListener('contextmenu', (e) => {\n            const contextMenu = this.desktop.createContextMenu(e, folderElement);\n            contextMenu.querySelector('.delete').addEventListener('click', () => {\n                this.removeFolderAndWindow(folderElement);\n                contextMenu.remove();\n            });\n            document.body.appendChild(contextMenu);\n        });\n    }\n\n    emptyBin() {\n        this.trash = [];\n        this.updateTrashWindowContent();\n    }\n\n    updateTrashWindowContent() {\n        const trashWindows = document.querySelectorAll('.window[data-name=\"Poubelle\"]');\n        if (trashWindows) {\n            trashWindows.forEach(trashWindow => {\n                trashWindow.querySelector('.content').innerHTML = this.trash.map(folder => {\n                    const folderElement = this.desktop.createFolderElement(folder.dataset.name, folder.querySelector('img').src);\n                    return folderElement.outerHTML;\n                }).join('');\n                this.trash.forEach((folder, index) => {\n                    const folderElementInWindow = trashWindow.querySelector(`.desktop-folder:nth-child(${index + 1})`);\n                    this.addRestoreEvent(folderElementInWindow);\n                });\n            });\n        }\n    }\n}","export class Pacman {\r\n    constructor(canvasId, windows) {\r\n        this.canvasId = canvasId;\r\n        this.windows = windows;\r\n        this.emulator = null;\r\n\r\n        this.addCloseButtonHandler();\r\n    }\r\n\r\n    addCloseButtonHandler() {\r\n        if (!this.canvasId) return;\r\n\r\n        const closeButton = document.querySelector('.close');\r\n        if (!closeButton) {\r\n            console.error(\"Element with class 'close' not found.\");\r\n            return;\r\n        }\r\n\r\n        closeButton.addEventListener('click', this.stop.bind(this));\r\n    }\r\n\r\n    launch() {\r\n        const jsdosElement = document.getElementById(this.canvasId);\r\n        if (!jsdosElement) {\r\n            console.error(`Element with id '${this.canvasId}' not found.`);\r\n            return;\r\n        }\r\n\r\n        emulators.pathPrefix = \"./JS-DOS/\";\r\n        this.emulator = Dos(jsdosElement, {\r\n            wdosboxUrl: \"./JS-DOS/wdosbox.js\",\r\n        });\r\n\r\n        this.removeFlexGrowElements(jsdosElement);\r\n\r\n        this.emulator.run(\"./pacman.jsdos\").then(() => {\r\n            console.log(\"Emulator is running.\");\r\n        }).catch(error => {\r\n            console.error(\"Error running emulator:\", error);\r\n        });\r\n    }\r\n\r\n    removeFlexGrowElements(parentElement) {\r\n        const elements = parentElement.getElementsByClassName('flex-grow-0');\r\n        while (elements.length > 0) {\r\n            elements[0].remove();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if (this.emulator) {\r\n            this.emulator.stop();\r\n            console.log(\"Emulator stopped.\");\r\n        } else {\r\n            console.error(\"No emulator instance to stop.\");\r\n        }\r\n    }\r\n}","import { Snake } from \"../Games/Snake.js\";\nimport { Doom } from \"../Games/Doom.js\";\nimport { hierarchy } from \"../Hierarchy.js\";\nimport {Pacman} from \"../Games/Pacman.js\";\n\nexport class Desktop {\n\n    constructor(windows) {\n        this.windows = windows;\n        this.selectedFolders = [];\n        this.originalPositions = {};\n        this.content = {};\n        this.isSelecting = false;\n        this.selectionBox = null;\n        this.gridSize = 135;\n        this.gap = 10;\n        this.startX = 0;\n        this.startY = 0;\n        this.iconSize = 50;\n        this.draggedFolderName = null;\n        this.windowsArea = document.querySelector('.windows_area');\n        this.navigation = document.querySelector('.navigation');\n        this.grid = this.createGrid();\n        this.hierarchy = new hierarchy(this);\n        this.snakeGameCounter = 0;\n        this.doomGameCounter = 0;\n        this.pacmanGameCounter = 0;\n        this.setLocalStorageKeys();\n        this.init();\n    }\n\n    init() {\n        this.windowsArea.addEventListener('mousedown', (e) => {\n            this.removeSelection(e);\n            this.startSelection(e);\n        });\n        this.windowsArea.addEventListener('mousemove', (e) => this.updateSelection(e));\n        this.windowsArea.addEventListener('mouseup', (e) => this.endSelection(e));\n        document.addEventListener('keydown', (e) => this.handleKeyDown(e));\n\n        this.launchSnakeOnWindowOpen();\n        this.setupDragAndDrop();\n    }\n\n    createLN(folderName, contentFunction, icon, type) {\n        const folderElement = this.createFolderElement(folderName, icon, type);\n        this.setFolderPosition(folderElement);\n        this.addDragEvents(folderElement, folderName);\n        this.content[folderName] = contentFunction;\n        if (folderName === 'Poubelle') {\n            this.addDoubleClickEventTrash(folderElement, folderName, contentFunction, icon);\n            this.addContextMenuEvent(folderElement);\n            folderElement.addEventListener('drop', (e) => this.hierarchy.onTrashDrop(e));\n            document.addEventListener('trashUpdated', () => {\n                this.hierarchy.updateTrashWindowContent();\n            });\n        } else {\n            this.addDoubleClickEvent(folderElement, folderName, contentFunction, icon);\n        }\n        document.querySelector('.windows_area').appendChild(folderElement);\n        this.hierarchy.moveToTrash(folderElement);\n    }\n\n    createFolderElement(folderName, icon, type) {\n        const folderElement = document.createElement('div');\n        const folderIcon = document.createElement('img');\n        const folderTitle = document.createElement('div');\n\n        folderElement.classList.add('desktop-folder', 'block_highlights');\n        folderElement.dataset.name = folderName;\n        folderElement.dataset.type = type;\n        folderElement.childrenFolders = {};\n\n        folderIcon.src = icon;\n        folderIcon.alt = folderName;\n        folderIcon.style.width = `${this.iconSize}px`;\n        folderIcon.style.height = `${this.iconSize}px`;\n        folderElement.appendChild(folderIcon);\n\n        folderTitle.textContent = folderName;\n        folderElement.appendChild(folderTitle);\n\n        return folderElement;\n    }\n\n    addDoubleClickEvent(folderElement, folderName, contentFunction, icon) {\n        folderElement.addEventListener('dblclick', () => {\n            folderElement.childrenFolders = folderElement.childrenFolders || {};\n            if (folderElement.dataset.type === 'folder' || folderElement.dataset.type === 'game') {\n                const childFolders = Object.values(folderElement.childrenFolders);\n                if (childFolders.length > 0) {\n                    let folderContent = '';\n                    childFolders.forEach(childFolder => {\n                        const childFolderElement = this.createFolderElement(childFolder.dataset.name, childFolder.querySelector('img').src, childFolder.dataset.type);\n                        folderContent += childFolderElement.outerHTML;\n                    });\n                    const childWindow = this.windows.createNewWindow(\"center\", icon, folderName, folderContent);\n                    childFolders.forEach((childFolder, index) => {\n                        const childFolderElementInWindow = childWindow.querySelector(`.desktop-folder:nth-child(${index + 1})`);\n                        this.addDoubleClickEvent(childFolderElementInWindow, childFolderElementInWindow.dataset.name, this.content[childFolderElementInWindow.dataset.name], 'icon_du_dossier');\n                    });\n                } else {\n                    let content;\n                    if (typeof contentFunction === 'function') {\n                        content = contentFunction();\n                    } else {\n                        content = contentFunction;\n                    }\n                    this.windows.createNewWindow(\"center\", icon, folderName, content);\n                }\n            } else {\n                let content;\n                if (typeof contentFunction === 'function') {\n                    content = contentFunction();\n                } else {\n                    content = contentFunction;\n                }\n                this.windows.createNewWindow(\"center\", icon, folderName, content);\n            }\n        });\n    }\n\n    addDoubleClickEventTrash(folderElement, folderName, content, icon) {\n        folderElement.addEventListener('dblclick', () => {\n            const trashContent = this.hierarchy.trash.map(folder => {\n                const folderElement = this.createFolderElement(folder.dataset.name, folder.querySelector('img').src);\n                return folderElement.outerHTML;\n            }).join('');\n            const trashWindow = this.windows.createNewWindow(\"center\", icon, folderName, trashContent);\n            this.hierarchy.trash.forEach((folder, index) => {\n                const folderElementInWindow = trashWindow.querySelector(`.desktop-folder:nth-child(${index + 1})`);\n                this.hierarchy.addRestoreEvent(folderElementInWindow);\n            });\n        });\n    }\n\n    setLocalStorageKeys() {\n        const keys = {\n            up: 'ArrowUp',\n            down: 'ArrowDown',\n            left: 'ArrowLeft',\n            right: 'ArrowRight'\n        };\n        localStorage.setItem('keys', JSON.stringify(keys));\n        localStorage.setItem('pauseKey', \"p\");\n    }\n\n    createGrid() {\n        const windowsAreaRect = this.windowsArea.getBoundingClientRect();\n        const navigationHeight = this.navigation.offsetHeight;\n        const dockHeight = document.querySelector('.dock').offsetHeight;\n        const maxY = window.innerHeight - dockHeight - navigationHeight;\n\n        const numGridsX = Math.floor(windowsAreaRect.width / (this.gridSize + this.gap));\n        const numGridsY = Math.floor(maxY / (this.gridSize + this.gap));\n\n        return Array(numGridsX).fill(undefined).map(() => Array(numGridsY).fill(0));\n    }\n\n    handleKeyDown(e) {\n        if (e.key === 'Delete') {\n            this.hierarchy.moveSelectedFoldersToTrash();\n        }\n    }\n\n    addContextMenuEvent(element) {\n        element.addEventListener('contextmenu', (e) => {\n            this.createContextMenu(e, element);\n        });\n    }\n\n    updateGrid(folderElement) {\n        const folderName = folderElement.dataset.name;\n        const oldPosition = this.getFolderPosition(folderElement);\n\n        if (oldPosition) {\n            const [oldX, oldY] = oldPosition;\n            this.grid[oldX][oldY] = 0;\n        }\n\n        const folderRect = folderElement.getBoundingClientRect();\n        const navigationHeight = document.querySelector('.navigation').offsetHeight;\n\n        const newX = Math.floor(folderRect.left / (this.gridSize + this.gap));\n        const newY = Math.floor((folderRect.top - navigationHeight) / (this.gridSize + this.gap));\n\n        if (newX >= 0 && newX < this.grid.length && newY >= 0 && newY < this.grid[newX].length) this.grid[newX][newY] = folderName;\n    }\n\n    launchDoom() {\n        const doomCanvas = document.createElement('div');\n        doomCanvas.id = 'jsdos';\n        doomCanvas.classList.add('jsdos');\n        return doomCanvas.outerHTML;\n    }\n\n    launchPacman() {\n        const pacmanCanvas = document.createElement('div');\n        pacmanCanvas.id = 'jsdospac';\n        pacmanCanvas.classList.add('jsdos');\n        return pacmanCanvas.outerHTML;\n    }\n\n    launchSnake() {\n        const snakeCanvas = document.createElement('canvas');\n        snakeCanvas.id = 'snake';\n        snakeCanvas.classList.add('snake');\n        return snakeCanvas.outerHTML;\n    }\n\n    launchSnakeOnWindowOpen() {\n        const windowsArea = document.querySelector('.windows_area');\n\n        const observer = new MutationObserver(mutationsList => {\n            for(let mutation of mutationsList) {\n                if (mutation.type === 'childList') {\n                    for(let node of mutation.addedNodes) {\n                        if(node.nodeType === Node.ELEMENT_NODE && node.classList.contains('window') && node.dataset.name === 'Snake') {\n                            this.initializeSnakeGame(node);\n                        }\n                        if(node.nodeType === Node.ELEMENT_NODE && node.classList.contains('window') && node.dataset.name === 'Doom') {\n                            this.initializeDoomGame(node);\n                        }\n                        if(node.nodeType === Node.ELEMENT_NODE && node.classList.contains('window') && node.dataset.name === 'Pacman') {\n                            this.initializePacmanGame(node);\n                        }\n                    }\n                }\n            }\n        });\n\n        observer.observe(windowsArea, { childList: true });\n    }\n\n    initializeDoomGame(node) {\n        const doomCanvas = node.querySelector('#jsdos');\n        if (doomCanvas) {\n            doomCanvas.id = `doom-${this.doomGameCounter++}`;\n            doomCanvas.width = node.offsetWidth;\n            doomCanvas.height = node.offsetHeight - node.querySelector('.controller').offsetHeight;\n\n            const doomGame = new Doom(doomCanvas.id, this.windows);\n            doomGame.launch();\n        }\n    }\n\n    initializePacmanGame(node) {\n        const pacmanCanvas = node.querySelector('#jsdospac');\n        if (pacmanCanvas) {\n            pacmanCanvas.id = `pacman-${this.pacmanGameCounter++}`;\n            pacmanCanvas.width = node.offsetWidth;\n            pacmanCanvas.height = node.offsetHeight - node.querySelector('.controller').offsetHeight;\n\n            const pacmanGame = new Pacman(pacmanCanvas.id, this.windows);\n            pacmanGame.launch();\n        }\n    }\n\n    initializeSnakeGame(node) {\n        const snakeCanvas = node.querySelector('#snake');\n        if (snakeCanvas) {\n            snakeCanvas.id = `snake-${this.snakeGameCounter++}`;\n            snakeCanvas.width = node.offsetWidth;\n            snakeCanvas.height = node.offsetHeight - node.querySelector('.controller').offsetHeight;\n            if (snakeCanvas.getContext) {\n                const snakeGame = new Snake(snakeCanvas.id, this.windows);\n                snakeGame.init();\n                snakeCanvas.snakeGame = snakeGame;\n            }\n        }\n    }\n\n    createContextMenu(e, folderElement) {\n        e.preventDefault();\n\n        this.removeExistingContextMenu();\n\n        const contextMenu = this.createContextMenuElement(e);\n\n        if (folderElement.dataset.name === 'Poubelle') {\n            this.addTrashOptions(contextMenu);\n        } else {\n            this.addDefaultOptions(contextMenu);\n        }\n\n        document.body.appendChild(contextMenu);\n        this.addRemoveContextMenuEvent(contextMenu);\n\n        return contextMenu;\n    }\n\n    removeExistingContextMenu() {\n        const existingMenu = document.querySelector('.context-menu');\n        if (existingMenu) {\n            existingMenu.remove();\n        }\n    }\n\n    createContextMenuElement(e) {\n        const contextMenu = document.createElement('div');\n        contextMenu.style.position = 'absolute';\n        contextMenu.style.left = `${e.pageX}px`;\n        contextMenu.style.top = `${e.pageY}px`;\n        contextMenu.classList.add('context-menu');\n        return contextMenu;\n    }\n\n    addTrashOptions(contextMenu) {\n        contextMenu.innerHTML = '<button class=\"empty-trash\">Vider la corbeille</button>';\n        contextMenu.querySelector('.empty-trash').addEventListener('click', () => {\n            this.hierarchy.emptyBin();\n            contextMenu.remove();\n        });\n    }\n\n    addDefaultOptions(contextMenu) {\n        contextMenu.innerHTML = '<button class=\"delete\">Supprimer</button><button class=\"restore\">Restaurer</button>';\n    }\n\n    addRemoveContextMenuEvent(contextMenu) {\n        document.addEventListener('mousedown', function removeContextMenu(event) {\n            if (!event.target.closest('.context-menu')) {\n                contextMenu.remove();\n                document.removeEventListener('mousedown', removeContextMenu);\n            }\n        });\n    }\n\n    setFolderPosition(folderElement) {\n        let freePosition = this.findFreePosition();\n        while (freePosition && this.grid[freePosition[0]][freePosition[1]] !== 0) {\n            freePosition = this.findFreePosition();\n        }\n        if (freePosition) {\n            const [x, y] = freePosition;\n            this.grid[x][y] = folderElement.dataset.name;\n\n            const gridY = y * (this.gridSize + this.gap) + document.querySelector('.navigation').offsetHeight;\n            const gridX = x * (this.gridSize + this.gap);\n            const windowsAreaRect = this.windowsArea.getBoundingClientRect();\n            const adjustedGridX = Math.min(gridX, windowsAreaRect.width - this.gridSize);\n            const adjustedGridY = Math.min(gridY, windowsAreaRect.height - this.gridSize);\n\n            folderElement.style.position = 'absolute';\n            folderElement.style.left = `${adjustedGridX}px`;\n            folderElement.style.top = `${adjustedGridY}px`;\n        } else {\n            console.error('Aucune position de disponible sur le bureau.');\n        }\n    }\n\n    getFolderPosition(folderElement) {\n        const folderName = folderElement.dataset.name;\n\n        for (let i = 0; i < this.grid.length; i++) {\n            for (let j = 0; j < this.grid[i].length; j++) {\n                if (this.grid[i][j] === folderName) {\n                    return [i, j];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    findFreePosition() {\n        const dockHeight = document.querySelector('.dock').offsetHeight;\n        const maxY = window.innerHeight - dockHeight;\n\n        const startX = this.lastFreePosition ? this.lastFreePosition[0] : 0;\n        const startY = this.lastFreePosition ? this.lastFreePosition[1] : 0;\n\n        for (let i = startX; i < this.grid.length; i++) {\n            for (let j = startY; j < this.grid[i].length; j++) {\n                const gridY = j * (this.gridSize + this.gap) + document.querySelector('.navigation').offsetHeight;\n                if (this.grid[i][j] === 0 && gridY < maxY) {\n                    return [i, j];\n                }\n            }\n        }\n\n        const newY = this.grid.length;\n        const gridY = newY * (this.gridSize + this.gap) + document.querySelector('.navigation').offsetHeight;\n        if (gridY < maxY) {\n            this.grid.push(Array(this.gridSize).fill(0));\n            return [this.grid.length - 1, 0];\n        }\n\n        console.error('Aucune position de disponible sur le bureau.');\n        return null;\n    }\n\n    setFolderToFreePosition(folder, desktopAreaRect) {\n        let freePosition = this.findFreePosition();\n        if (freePosition) {\n            const [x, y] = freePosition;\n            this.grid[x][y] = folder.dataset.name;\n\n            const gridY = y * (this.gridSize + this.gap) + document.querySelector('.navigation').offsetHeight;\n            const gridX = x * (this.gridSize + this.gap);\n\n            const adjustedGridX = Math.min(Math.max(gridX, 0), desktopAreaRect.width - this.gridSize);\n            const adjustedGridY = Math.min(Math.max(gridY, 0), desktopAreaRect.height - this.gridSize);\n\n            folder.style.left = `${adjustedGridX}px`;\n            folder.style.top = `${adjustedGridY}px`;\n\n            // Update the last free position\n            this.lastFreePosition = freePosition;\n        }\n    }\n\n    addDragEvents(folderElement, folderName) {\n        folderElement.draggable = true;\n\n        if (folderElement.closest('.window')) return;\n\n        this.preventPropagationOnMouseDown(folderElement);\n        this.handleDragStart(folderElement, folderName);\n        this.handleDragOver(folderElement);\n        this.handleDragLeave(folderElement);\n        this.handleDrop(folderElement, folderName);\n        this.handleDragEnd(folderElement);\n    }\n\n    preventPropagationOnMouseDown(folderElement) {\n        const folderIcon = folderElement.querySelector('img');\n        folderIcon.addEventListener('mousedown', (e) => {\n            e.stopPropagation();\n        });\n    }\n\n    handleDragStart(folderElement, folderName) {\n        folderElement.addEventListener('dragstart', (e) => {\n            e.dataTransfer.setData('text/plain', folderName);\n            this.draggedFolderName = folderName;\n            folderElement.classList.add('dragging');\n            this.draggedFolder = folderElement;\n\n            if (!folderElement.classList.contains('selected')) {\n                this.selectedFolders.forEach(folder => {\n                    folder.classList.remove('selected');\n                });\n                this.selectedFolders = [];\n            }\n\n            this.previewElement = folderElement.cloneNode(true);\n            this.previewElement.classList.add('folder-preview');\n            this.previewElement.style.position = 'absolute';\n            document.querySelector('.windows_area').appendChild(this.previewElement);\n        });\n    }\n\n    handleDragOver(folderElement) {\n        folderElement.addEventListener('dragover', (e) => {\n            e.preventDefault();\n            if (folderElement.dataset.type === 'folder' || folderElement.dataset.type === 'game') {\n                folderElement.classList.add('over');\n            }\n        });\n    }\n\n    handleDragLeave(folderElement) {\n        folderElement.addEventListener('dragleave', () => {\n            folderElement.classList.remove('over');\n        });\n    }\n\n    handleDrop(folderElement, folderName) {\n        folderElement.addEventListener('drop', (e) => {\n            e.preventDefault();\n            const childFolderName = e.dataTransfer.getData('text/plain');\n            const childFolderElement = document.querySelector(`.desktop-folder[data-name=\"${childFolderName}\"]`);\n\n            if (folderName === childFolderName) {\n                folderElement.classList.remove('over');\n                return;\n            }\n\n            if ((folderElement.dataset.type === 'folder' || folderElement.dataset.type === 'game') && (childFolderElement.dataset.type !== 'system' || childFolderName === 'Snake')) {\n                folderElement.childrenFolders[childFolderName] = childFolderElement;\n                childFolderElement.style.display = 'none';\n            }\n            folderElement.classList.remove('over');\n        });\n    }\n\n    handleDragEnd(folderElement) {\n        folderElement.addEventListener('dragend', () => {\n            folderElement.classList.remove('dragging');\n            this.updateGrid(folderElement);\n            if (this.previewElement) {\n                this.previewElement.remove();\n                this.previewElement = null;\n            }\n        });\n    }\n\n    setupDragAndDrop() {\n        this.setupDragOver();\n        this.setupDrop();\n    }\n\n    setupDragOver() {\n        const desktopArea = document.querySelector('.windows_area');\n\n        desktopArea.addEventListener('dragover', (e) => {\n            e.preventDefault();\n\n            const folderName = this.draggedFolderName;\n            const folderElement = document.querySelector(`.desktop-folder[data-name=\"${folderName}\"]`);\n\n            if (!folderElement || folderElement.closest('.window')) {\n                return;\n            }\n\n            if (!this.previewElement) {\n                this.previewElement = folderElement.cloneNode(true);\n                this.previewElement.classList.add('folder-preview');\n                this.previewElement.style.position = 'absolute';\n                desktopArea.appendChild(this.previewElement);\n            }\n\n            let gridX = Math.floor(e.clientX / (this.gridSize + this.gap)) * (this.gridSize + this.gap);\n            let gridY = Math.floor(e.clientY / (this.gridSize + this.gap)) * (this.gridSize + this.gap);\n\n            const desktopAreaRect = desktopArea.getBoundingClientRect();\n\n            gridX = Math.min(Math.max(gridX, 0), desktopAreaRect.width - this.gridSize);\n            gridY = Math.min(Math.max(gridY, 0), desktopAreaRect.height - this.gridSize);\n\n            gridY += document.querySelector('.navigation').offsetHeight;\n\n            if (this.selectedFolders.length > 1) {\n                const deltaX = gridX - parseInt(this.draggedFolder.style.left);\n                const deltaY = gridY - parseInt(this.draggedFolder.style.top);\n\n                this.selectedFolders.forEach(folder => {\n                    folder.style.left = `${parseInt(folder.style.left) + deltaX}px`;\n                    folder.style.top = `${parseInt(folder.style.top) + deltaY}px`;\n                });\n            } else {\n                folderElement.style.left = `${gridX}px`;\n                folderElement.style.top = `${gridY}px`;\n            }\n\n            this.previewElement.style.left = `${gridX}px`;\n            this.previewElement.style.top = `${gridY}px`;\n        });\n    }\n\n    setupDrop() {\n        const desktopArea = document.querySelector('.windows_area');\n\n        desktopArea.addEventListener('drop', (e) => {\n            e.preventDefault();\n\n            const folderName = this.draggedFolderName;\n            const folderElement = document.querySelector(`.desktop-folder[data-name=\"${folderName}\"]`);\n\n            if (folderElement) {\n                this.selectedFolders.forEach(folder => {\n                    const folderRect = folder.getBoundingClientRect();\n                    const desktopAreaRect = desktopArea.getBoundingClientRect();\n                    if (folderRect.left < desktopAreaRect.left || folderRect.right > desktopAreaRect.right || folderRect.top < desktopAreaRect.top || folderRect.bottom > desktopAreaRect.bottom) {\n                        this.setFolderToFreePosition(folder, desktopAreaRect);\n                    } else {\n                        // Check if the grid position is already occupied\n                        const gridX = Math.floor(folderRect.left / (this.gridSize + this.gap));\n                        const gridY = Math.floor((folderRect.top - document.querySelector('.navigation').offsetHeight) / (this.gridSize + this.gap));\n                        if (this.grid[gridX][gridY] !== 0) {\n                            this.setFolderToFreePosition(folder, desktopAreaRect);\n                        }\n                    }\n                    this.updateGrid(folder);\n                });\n                this.draggedFolderName = null;\n                if (this.previewElement) {\n                    this.previewElement.remove();\n                    this.previewElement = null;\n                }\n                this.draggedFolder = null;\n            }\n        });\n    }\n\n    startSelection(e) {\n\n        if (e.target.closest('.desktop-folder')) return;\n        if (e.button !== 0) return;\n\n        const navigationHeight = document.querySelector('.navigation').offsetHeight;\n        const dockHeight = document.querySelector('.dock').offsetHeight;\n        const maxY = window.innerHeight - dockHeight;\n\n        if (e.clientY < navigationHeight || e.clientY > maxY) return;\n\n        const elementUnderCursor = document.elementFromPoint(e.clientX, e.clientY);\n        if (elementUnderCursor.closest('.window') || elementUnderCursor.closest('.window-menu')) return;\n\n        this.isSelecting = true;\n        this.startX = e.clientX;\n        this.startY = e.clientY;\n\n        this.selectionBox = document.createElement('div');\n        this.selectionBox.style.position = 'absolute';\n        this.selectionBox.style.left = `${this.startX}px`;\n        this.selectionBox.style.top = `${this.startY}px`;\n        this.selectionBox.style.border = '1px solid rgba(12, 36, 97,1.0)';\n        this.selectionBox.style.background = 'rgba(74, 105, 189,0.3)';\n        this.selectionBox.style.pointerEvents = 'none'\n\n        const windows = document.querySelectorAll('.window');\n        windows.forEach(window => window.classList.add('no-select'));\n\n        document.addEventListener('mousemove', this.updateSelection.bind(this));\n        document.addEventListener('mouseup', this.endSelection.bind(this));\n\n        document.body.appendChild(this.selectionBox);\n    }\n\n    updateSelection(e) {\n        if (!this.isSelecting) return;\n\n        const dockHeight = document.querySelector('.dock').offsetHeight;\n        const maxY = window.innerHeight - dockHeight;\n\n        const currentY = Math.min(Math.max(e.clientY, this.navigation.offsetHeight), maxY);\n        const currentX = e.clientX;\n\n        const newWidth = Math.abs(currentX - this.startX);\n        const newHeight = Math.abs(currentY - this.startY);\n        const newLeft = Math.min(currentX, this.startX);\n        const newTop = Math.min(currentY, this.startY);\n\n        this.selectionBox.style.width = `${newWidth}px`;\n        this.selectionBox.style.height = `${newHeight}px`;\n        this.selectionBox.style.left = `${newLeft}px`;\n        this.selectionBox.style.top = `${newTop}px`;\n\n        const folders = document.querySelectorAll('.desktop-folder');\n        folders.forEach(folder => {\n            const folderRect = folder.getBoundingClientRect();\n            const overlaps = !(folderRect.right < this.selectionBox.offsetLeft ||\n                folderRect.left > this.selectionBox.offsetLeft + this.selectionBox.offsetWidth ||\n                folderRect.bottom < this.selectionBox.offsetTop ||\n                folderRect.top > this.selectionBox.offsetTop + this.selectionBox.offsetHeight);\n\n            if (overlaps) {\n                if (!this.selectedFolders.includes(folder)) {\n                    folder.classList.add('selected');\n                    this.selectedFolders.push(folder);\n                    this.originalPositions[folder.dataset.name] = { left: folder.style.left, top: folder.style.top };\n                }\n            } else {\n                folder.classList.remove('selected');\n                this.selectedFolders = this.selectedFolders.filter(selectedFolder => selectedFolder !== folder);\n                delete this.originalPositions[folder.dataset.name];\n            }\n        });\n    }\n\n    removeSelection(e) {\n        if (!e.target.closest('.desktop-folder')) {\n            this.selectedFolders.forEach(folder => {\n                folder.classList.remove('selected');\n            });\n            this.selectedFolders = [];\n        }\n    }\n\n    endSelection() {\n        if (!this.isSelecting) return;\n\n        document.removeEventListener('mousemove', this.updateSelection.bind(this));\n        document.removeEventListener('mouseup', this.endSelection.bind(this));\n\n        const windows = document.querySelectorAll('.window');\n        windows.forEach(window => window.classList.remove('no-select'));\n\n        this.isSelecting = false;\n        document.body.removeChild(this.selectionBox);\n        this.selectionBox = null;\n    }\n}","import { params } from \"../parameters/options/params.js\";\nimport { Desktop } from \"../../Application/System/Desktop.js\";\nimport { Windows } from \"../../Application/System/Windows.js\";\nimport { Doom } from \"../../Application/Games/Doom.js\";\n\nconst windows = new Windows();\nconst desktop = new Desktop(windows);\nconst doom = new Doom();\n\nexport const shortcuts = [\n    { title: 'ParamÃ¨tres', path: params, icon: \"./images/parameters.png\", type: \"system\", showInDock: true },\n    { title: 'Snake', path: desktop.launchSnake, icon: \"./images/snake.png\", type: \"game\", showInDock: true },\n    { title: 'Doom', path: desktop.launchDoom, icon: \"./images/doom.png\", type: \"game\", showInDock: true },\n    { title: 'Pacman', path: desktop.launchPacman, icon: \"./images/pacman.png\", type: \"game\", showInDock: true },\n    { title: 'Corbeille', path: '', icon: \"./images/bin.png\", type: \"system\", showInDock: true },\n];\n","export class Dock {\n    constructor(shortcut, content, windows) {\n        this.shortcut = shortcut;\n        this.content = content;\n        this.windows = windows;\n    }\n\n    createDockElement() {\n        if (this.shortcut.showInDock) {\n            const dockContent = document.querySelector('.dock_content');\n            const dockIconDiv = document.createElement('div');\n            const dockIconImg = document.createElement('img');\n\n            dockIconImg.className = `items_dock`;\n            dockIconImg.src = this.shortcut.icon;\n            dockIconImg.alt = `Image de ${this.shortcut.title}`;\n            dockIconDiv.appendChild(dockIconImg);\n            dockContent.appendChild(dockIconDiv);\n\n            dockIconDiv.addEventListener('click', () => {\n                this.windows.createNewWindow('center', this.shortcut.icon, this.shortcut.title, this.content, true);\n            });\n        }\n    }\n}","import { Windows } from \"./System/Windows.js\";\r\nimport { shortcuts } from \"../contents/paths/contents.js\";\r\nimport { Desktop } from \"./System/Desktop.js\";\r\nimport { Dock } from \"./System/Dock.js\";\r\n\r\nexport default class Application {\r\n    constructor() {\r\n        this.windows = new Windows();\r\n        this.desktop = new Desktop(this.windows);\r\n        this.turnOffButton = document.getElementById('turnOffButton');\r\n\r\n        this.startScreen = document.querySelector('.start');\r\n        this.container = document.querySelector('.container');\r\n        this.loadingScreen = document.querySelector('.loading-screen');\r\n        this.loadingText = document.getElementById('loading-text');\r\n\r\n        this.setupHoverEffect();\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.setupGlitchEffect();\r\n        this.setupMessageListener();\r\n        this.setupTurnOffButton();\r\n        this.initializeShortcuts();\r\n    }\r\n\r\n    setupGlitchEffect() {\r\n        const glitchEffect = () => {\r\n            const glitchLine = document.createElement('div');\r\n            glitchLine.className = 'crt-glitch';\r\n            document.body.appendChild(glitchLine);\r\n\r\n            setTimeout(() => {\r\n                glitchLine.remove();\r\n            }, 8000);\r\n        };\r\n\r\n        setInterval(glitchEffect, Math.random() * 6000 + 10000);\r\n    }\r\n\r\n    setupMessageListener() {\r\n        window.addEventListener('message', (event) => {\r\n            if (event.data === 'startPlaneClicked') {\r\n                this.startComputer();\r\n            } else if (event.data === 'stopPlaneClicked') {\r\n                this.setupOffComputer();\r\n            }\r\n        }, false);\r\n        document.querySelector('#start').addEventListener('click', () => {\r\n            this.startComputer();\r\n        });\r\n        setTimeout(() => {\r\n            this.startComputer();\r\n            window.parent.postMessage('startPlaneClicked', '*');\r\n        }, 30000)\r\n        // this.startComputer();\r\n    }\r\n\r\n    startComputer() {\r\n        this.startScreen.style.display = 'none';\r\n        this.showLoadingScreen();\r\n    }\r\n\r\n    showLoadingScreen() {\r\n        const loadingMessages = [\r\n            'Initialisation du systÃ¨me...',\r\n            'Chargement des modules de base...',\r\n            'VÃ©rification de la mÃ©moire...',\r\n            'Connexion au rÃ©seau local...',\r\n            'TÃ©lÃ©chargement des dÃ©pendances...',\r\n            'TÃ©lÃ©chargement : [          ]',\r\n            'TÃ©lÃ©chargement : [*         ]',\r\n            'TÃ©lÃ©chargement : [**        ]',\r\n            'TÃ©lÃ©chargement : [***       ]',\r\n            'TÃ©lÃ©chargement : [****      ]',\r\n            'TÃ©lÃ©chargement : [*****     ]',\r\n            'TÃ©lÃ©chargement : [******    ]',\r\n            'TÃ©lÃ©chargement : [*******   ]',\r\n            'TÃ©lÃ©chargement : [********  ]',\r\n            'TÃ©lÃ©chargement : [********* ]',\r\n            'TÃ©lÃ©chargement : [**********]',\r\n            'TÃ©lÃ©chargement terminÃ©.',\r\n            'Configuration des paramÃ¨tres du systÃ¨me...',\r\n            'Initialisation des pilotes...',\r\n            'Lancement des services de base...',\r\n            'Lancement des services rÃ©seau...',\r\n            'VÃ©rification des mises Ã  jour...',\r\n            'Installation des mises Ã  jour...',\r\n            'Optimisation des performances...',\r\n            'DÃ©marrage des interfaces utilisateur...',\r\n            'Chargement des prÃ©fÃ©rences utilisateur...',\r\n            'PrÃ©paration de l\\'environnement de bureau...',\r\n            'Finalisation du dÃ©marrage...'\r\n        ];\r\n\r\n        let index = 0;\r\n        const intervalId = setInterval(() => {\r\n            if (index < loadingMessages.length) {\r\n                this.loadingText.textContent += loadingMessages[index] + '\\n';\r\n                index++;\r\n            } else {\r\n                clearInterval(intervalId);\r\n                setTimeout(() => {\r\n                    this.loadingScreen.style.display = 'none';\r\n                    this.container.style.display = 'block';\r\n                    this.container.classList.add('fade-out');\r\n                    this.removeFadeOutClassAfterDelay();\r\n                }, 500);\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    removeFadeOutClassAfterDelay() {\r\n        setTimeout(() => {\r\n            this.container.classList.remove('fade-out');\r\n        }, 500);\r\n    }\r\n\r\n    setupTurnOffButton() {\r\n        this.turnOffButton.addEventListener('click', () => {\r\n            this.setupOffComputer();\r\n            this.notifyParent();\r\n        });\r\n    }\r\n\r\n    setupOffComputer() {\r\n        document.body.classList.add('turn-off-animation');\r\n        new Audio('./sounds/off.mp3').play().then(r => r).catch(e => e);\r\n        setTimeout(() => {\r\n            document.querySelectorAll('.crt-glitch').forEach(el => el.remove());\r\n            document.body.classList.remove('fade-out');\r\n            document.body.classList.remove('turn-off-animation');\r\n            this.startScreen.style.display = 'flex';\r\n            this.resetLoadingScreen();\r\n        }, 550);\r\n    }\r\n\r\n    notifyParent() {\r\n        window.parent.postMessage('stopPlaneClicked', '*');\r\n    }\r\n\r\n    resetLoadingScreen() {\r\n        this.loadingText.textContent = '';\r\n        this.loadingScreen.style.display = 'block';\r\n    }\r\n\r\n    initializeShortcuts() {\r\n        shortcuts.forEach(shortcut => {\r\n            const dock = new Dock(shortcut, shortcut.path, this.windows);\r\n            dock.createDockElement();\r\n            this.desktop.createLN(shortcut.title, shortcut.path, shortcut.icon, shortcut.type);\r\n        });\r\n    }\r\n\r\n    setupHoverEffect() {\r\n        const buttons = document.querySelectorAll('.menu-button');\r\n        buttons.forEach(button => {\r\n            button.addEventListener('mouseenter', () => {\r\n                this.clearArrow();\r\n                button.textContent = '-> ' + button.textContent.trim();\r\n                button.classList.add('active');\r\n            });\r\n        });\r\n    }\r\n\r\n    clearArrow() {\r\n        const buttons = document.querySelectorAll('.menu-button');\r\n        buttons.forEach(button => {\r\n            if (button.textContent.startsWith('-> ')) {\r\n                button.textContent = button.textContent.substring(3);\r\n                button.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n}\r\n","import Application from \"./Application/Application.js\";\n\nconst app = new Application();"],"names":["WindowController","classWindows","windowElement","icon","__privateAdd","_WindowController_instances","controller","minimizeButton","e","expandButton","closeButton","snakeCanvasId","snakeCanvas","dock","iconID","windowIDs","oldIcon","menu","id","menuItem","navigationHeight","snakeGame","part","parentRect","rect","newWidth","maxWidth","newHeight","maxHeight","newLeft","newTop","newRight","newBottom","mouseX","mouseY","windowWidth","windowHeight","__privateMethod","getMouseAndWindowSize_fn","resizeMargin","Navigation","now","options","dateTimeElement","formattedDateTime","KEY_SYMBOLS","params1","className","params2","params4","keys","snakeColor","keySymbols","upSymbol","downSymbol","leftSymbol","rightSymbol","pauseKey","pauseSymbol","paramsController","Windows","windowController","position","title","content","color","contentFunction","windowsElement","newWindowElement","newWindowController","navItems","contentContainer","activeInput","controlLeftRadio","controlRightRadio","snakeColorInput","input","newKey","newKeys","placement","newColor","theme","themeSelector","message","buttonText1","buttonText2","blurBackground","popup","text","button1","button2","params","ClassNotifications","notification","h2","messageDiv","contentDiv","button","buttonAction","index","replayButton","Snake","canvasId","windows","textTitle","startButton","optionButton","newWindow","snakeNavItem","mappedKey","key","score","bestScore","time","elapsed","wall","head","row","x","cell","y","i","lastElement","lowerCaseKey","lowerCaseKeys","numberOfWalls","minDistance","snakeHead","freePositions","randomIndex","goldenAppleIndex","notifications","parentWindow","existingReplayButton","oldWidth","oldHeight","newCanvas","Doom","jsdosElement","error","parentElement","elements","hierarchy","desktop","folderName","folderElement","folder","folderElementInWindow","restoreEvent","contextMenu","restoredWindowContent","trashUpdatedEvent","trashWindows","trashWindow","Pacman","Desktop","type","folderIcon","folderTitle","childFolders","folderContent","childFolder","childFolderElement","childWindow","childFolderElementInWindow","trashContent","windowsAreaRect","dockHeight","maxY","numGridsX","numGridsY","element","oldPosition","oldX","oldY","folderRect","newX","newY","doomCanvas","pacmanCanvas","windowsArea","mutationsList","mutation","node","existingMenu","removeContextMenu","event","freePosition","gridY","gridX","adjustedGridX","adjustedGridY","j","startX","startY","desktopAreaRect","childFolderName","desktopArea","deltaX","deltaY","elementUnderCursor","window","currentY","currentX","selectedFolder","shortcuts","Dock","shortcut","dockContent","dockIconDiv","dockIconImg","Application","glitchLine","loadingMessages","intervalId","r","el"],"mappings":"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"}